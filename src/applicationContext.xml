<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-2.5.xsd
			http://www.springframework.org/schema/aop
			http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
			http://www.springframework.org/schema/tx
			http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
    
    <!-- 配置AOP -->
    <!-- <aop:aspectj-autoproxy/> -->
    
	<!-- 扫描+注解的方式：把bean交给Spring管理 -->
	<!-- 启用扫描功能 -->
	<context:component-scan base-package="com.kjdc" />

    <!-- 读入数据库链接配置属性文件 -->
	<context:property-placeholder location="classpath:jdbc.properties"/>
	<!-- C3p0数据源 ，做成了单例模式-->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
	    <!-- 数据库驱动 -->
		<property name="driverClass" value="${jdbc.driverClassName}"/>
		<!-- 数据库连接路径 -->
		<property name="jdbcUrl" value="${jdbc.url}"/>
		<!-- 连接数据用户名 -->
		<property name="user" value="${jdbc.user}"/>
		<!-- 连接数据用户密码 -->
		<property name="password" value="${jdbc.password}"/>
		<!-- 每60秒检查所有连接池中的空闲连接。Default:0 -->
		<property name="idleConnectionTestPeriod" value="60" />
		<!-- 初始化时获取的链接数，取值应在minPoolSize与maxPoolSize之间。Default:3 -->
		<property name="initialPoolSize" value="2" />
		<!-- 连接池中保留的最小连接数 -->
		<property name="minPoolSize" value="2" />
		<!-- 连接池中保留的最大连接数。Default:15 -->
		<property name="maxPoolSize" value="20" />
		<!-- 最大空闲时间，120秒内未使用则连接被丢弃。右为0则永不丢弃。Default:0 -->
		<property name="maxIdleTime" value="120" />
		<!-- 当连接池中的连接耗尽时,c3p0一次同时获取的连接数。Default:3 -->
		<property name="acquireIncrement" value="5" />
	</bean>

    <!-- 配置JDBC模板 -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
         <constructor-arg ref="dataSource"></constructor-arg>
    </bean>

    <!-- 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<!-- 使用基于注解方式来配置事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" />

</beans>